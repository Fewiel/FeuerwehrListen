@page "/admin/closed-lists"
@using FeuerwehrListen.Models
@using FeuerwehrListen.Repositories
@using FeuerwehrListen.Components.Layout
@using FeuerwehrListen.Components.Shared
@inject AttendanceListRepository AttendanceRepo
@inject OperationListRepository OperationRepo
@inject FireSafetyWatchRepository FireSafetyWatchRepo
@inject NavigationManager Navigation
@rendermode InteractiveServer

<PageTitle>Abgeschlossene Listen - Admin</PageTitle>

<AdminAuthCheck>

    <div class="container mt-4">
        <div class="row mb-4">
            <div class="col">
                <h1>Abgeschlossene Listen</h1>
            </div>
        </div>

        <div class="row">
            <div class="col-12">
                <ListComponent TItem="OperationList"
                               Title="Einsatzlisten"
                               IconClass="bi bi-exclamation-triangle"
                               Items="_closedOperation"
                               EmptyListMessage="Keine abgeschlossenen Einsatzlisten">
                    <ItemTemplate>
                        <div @onclick='() => Navigation.NavigateTo($"/operation/{context.Id}")' style="cursor: pointer;">
                            <div class="d-flex w-100 justify-content-between">
                                <h6 class="mb-1">@context.OperationNumber - @context.Keyword</h6>
                                <small>@context.ClosedAt?.ToString("dd.MM.yyyy HH:mm")</small>
                            </div>
                            <p class="mb-1"><strong>@context.Address</strong></p>
                        </div>
                        <button class="btn btn-sm btn-warning mt-2" @onclick="() => ArchiveOperationList(context.Id)" @onclick:stopPropagation="true">
                            <i class="bi bi-archive"></i> Archivieren
                        </button>
                    </ItemTemplate>
                </ListComponent>

                <ListComponent TItem="AttendanceList"
                               Title="Anwesenheitslisten"
                               IconClass="bi bi-calendar-check"
                               Items="_closedAttendance"
                               EmptyListMessage="Keine abgeschlossenen Anwesenheitslisten">
                    <ItemTemplate>
                        <div @onclick='() => Navigation.NavigateTo($"/attendance/{context.Id}")' style="cursor: pointer;">
                            <div class="d-flex w-100 justify-content-between">
                                <h6 class="mb-1">@context.Title</h6>
                                <small>@context.ClosedAt?.ToString("dd.MM.yyyy HH:mm")</small>
                            </div>
                            <p class="mb-1"><strong>@context.Unit</strong></p>
                            <small class="text-muted">@context.Description</small>
                        </div>
                        <button class="btn btn-sm btn-warning mt-2" @onclick="() => ArchiveAttendanceList(context.Id)" @onclick:stopPropagation="true">
                            <i class="bi bi-archive"></i> Archivieren
                        </button>
                    </ItemTemplate>
                </ListComponent>
                
                <ListComponent TItem="FireSafetyWatch"
                               Title="Brandsicherheitswachen"
                               IconClass="bi bi-shield-check"
                               Items="_closedFireSafetyWatches"
                               EmptyListMessage="Keine abgeschlossenen Brandsicherheitswachen">
                    <ItemTemplate>
                        <div @onclick='() => Navigation.NavigateTo($"/firesafetywatches/{context.Id}")' style="cursor: pointer;">
                            <div class="d-flex w-100 justify-content-between">
                                <h6 class="mb-1">@context.Name</h6>
                                <small>@context.ClosedAt?.ToString("dd.MM.yyyy HH:mm")</small>
                            </div>
                            <p class="mb-1"><strong>@context.Location</strong></p>
                        </div>
                        <button class="btn btn-sm btn-warning mt-2" @onclick="() => ArchiveFireSafetyWatch(context.Id)" @onclick:stopPropagation="true">
                            <i class="bi bi-archive"></i> Archivieren
                        </button>
                    </ItemTemplate>
                </ListComponent>
            </div>
        </div>
    </div>

</AdminAuthCheck>

@code {
    private List<AttendanceList> _closedAttendance = new();
    private List<OperationList> _closedOperation = new();
    private List<FireSafetyWatch> _closedFireSafetyWatches = new();

    protected override async Task OnInitializedAsync()
    {
        await LoadLists();
    }

    private async Task LoadLists()
    {
        _closedAttendance = (await AttendanceRepo.GetClosedAsync()).OrderByDescending(l => l.ClosedAt).ToList();
        _closedOperation = (await OperationRepo.GetClosedAsync()).OrderByDescending(l => l.ClosedAt).ToList();
        _closedFireSafetyWatches = (await FireSafetyWatchRepo.GetClosedAsync()).OrderByDescending(l => l.ClosedAt).ToList();
    }

    private async Task ArchiveAttendanceList(int id)
    {
        var list = await AttendanceRepo.GetByIdAsync(id);
        if (list != null)
        {
            list.IsArchived = true;
            await AttendanceRepo.UpdateAsync(list);
            await LoadLists();
        }
    }

    private async Task ArchiveOperationList(int id)
    {
        var list = await OperationRepo.GetByIdAsync(id);
        if (list != null)
        {
            list.IsArchived = true;
            await OperationRepo.UpdateAsync(list);
            await LoadLists();
        }
    }
    
    private async Task ArchiveFireSafetyWatch(int id)
    {
        var watch = await FireSafetyWatchRepo.GetByIdAsync(id);
        if (watch != null)
        {
            watch.IsArchived = true;
            await FireSafetyWatchRepo.UpdateAsync(watch);
            await LoadLists();
        }
    }
}

